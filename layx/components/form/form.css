:is(form,label,input,textarea,select, option,::picker(select)) {
    --padding-x: .8rem;
    --padding-y: 1rem;
    --radius: .5rem;
    --color-rgb:0,0,0;
    --bg-color-rgb:255,255,255;
    --form-bg-color: rgb(245, 245, 245);
    --accent-color: rgb(178, 241, 255);
    --valid-color: rgb(58, 230, 170);
    --invalid-color: rgb(255, 81, 81);
    --color: rgb(var(--color-rgb));
    --bg-color: rgb(var(--bg-color-rgb));
} 

form {
    padding: .5rem;
    background-color: var(--form-bg-color);
}

label {
    --padding-x: 1rem;
    display: inline-block;
    margin-bottom: calc(var(--margin-bottom, 1rem) / 2);
    user-select: none;
}

input,textarea,select {

    display: block;
    min-width: 0;
    max-width: 100%;
    padding: var(--padding-y,0) var(--padding-x,0);
    margin: unset;
    margin-bottom: var(--margin-bottom, 1rem);
    font: inherit;
    color: var(--color);
    accent-color: var(--accent-color);
    background-color: var(--bg-color);
    border: var(--border, none);
    border-radius: var(--radius);
    outline: 3px solid transparent;
    transition: .3s;

    &:focus-visible {
        outline: 1.5px solid var(--accent-color);
    }

    &.validate {

        &:not(.valid, .invalid) {
            &:user-valid {
                outline: 1.5px solid var(--valid-color);
            }

            &:user-invalid {
                outline: 1.5px solid var(--invalid-color);
            }
        }

        &.valid {
            &:user-valid {
                outline: 1.5px solid var(--valid-color);
            }
        }

        &.invalid {
            &:user-invalid {
                outline: 1.5px solid var(--invalid-color);
            }
        }
    }

    &.r {
        --radius: 10rem;
    }

}


input {

    &::placeholder {
        color: var(--color, #000);
        opacity: .6;
    }

    &:is([type=date], [type=time], [type=month], [type=week]) {
        position: relative;
        z-index: 1;

        &::-webkit-datetime-edit,
        &::-webkit-date-and-time-value {
            background-color: var(--bg-color);
        }

        &::-webkit-date-and-time-value {
            margin-inline: unset;
            min-height: 1lh;
            white-space-collapse: collapse;
            width: fit-content;
        }

        &:before {
            content: attr(type);
            position: absolute;
            z-index: -1;
            opacity: .7;
            text-transform: capitalize;
        }
    }

    &:is([type=checkbox], [type=radio]) {
        appearance: none;
        display: inline-block;
        vertical-align: middle;
        margin: unset;
        padding: unset;
        height: 1lh;
        width: 1lh;

        &.modern {
            display: none;

            &~label {
                padding: var(--padding-y) var(--padding-x);
                color: var(--color);
                background-color: var(--bg-color);
                border: var(--border, none);
                border-radius: var(--radius);
                margin-bottom: var(--margin-bottom, 1rem);
                transition: .3s;

                &:focus-visible {
                    outline: 1.5px solid var(--accent-color);
                }
            }

            &:checked~label {
                background-color: var(--accent-color);
            }
        }

    }

    &[type=checkbox] {
        border-radius: calc(var(--radius) * .75);

        &:checked {
            background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3e%3cpath fill='none' stroke='%23fff' stroke-linecap='round' stroke-linejoin='round' stroke-width='3' d='m6 10 3 3 6-6'/%3e%3c/svg%3e") center, var(--accent-color);
        }
    }

    &[type=radio] {
        border-radius: 50%;

        &::after {
            content: '';
            display: block;
            background-color: var(--accent-color);
            border-radius: 50%;
            height: 100%;
            width: 100%;
            scale: 0;
            transition: .3s;
        }

        &:checked {
            &::after {
                scale: .6;
            }
        }
    }

    &[type=file] {

        padding: calc(var(--padding-y) * .5);

        &::-webkit-file-upload-button {
            border: unset;
            font: inherit;
            background-color: var(--accent-color);
            padding: calc(var(--padding-y) * .5);
            border-radius: calc(var(--radius) * .6);
        }

        &::file-selector-button {
            border: unset;
            font: inherit;
            background-color: var(--accent-color);
            padding: calc(var(--padding-y) * .5);
            border-radius: calc(var(--radius) * .6);
        }
    }

    &[type=color] {
        --padding: calc(var(--padding-y) / 2);
        padding: var(--padding);
        min-block-size: calc(var(--padding-y) * 2 + 1lh);
        min-inline-size: 5rem;

        &::-webkit-color-swatch-wrapper {
            padding: unset;
        }

        &::-webkit-color-swatch {
            border: unset;
            border-radius: var(--radius);
        }

        &::-moz-color-swatch {
            border: unset;
            border-radius: var(--radius);
        }
    }

    &[type=range] {

        &.modern {

            --percent: calc((var(--value) - var(--min)) / (var(--max) - var(--min)) * 100);
            appearance: none;
            position: relative;
            min-block-size: calc(var(--padding-y) * 2 + 1lh);
            background: linear-gradient(var(--accent-color), var(--accent-color)) no-repeat, var(--bg-color, rgb(230, 230, 230));
            background-size: calc(var(--percent, 50) * 1%);
            transition: background-size .1s;

            &.value::after {
                counter-set: value var(--value);
                content: counter(value);
                pointer-events: none;
                position: absolute;
                inset: .5rem;
                display: flex;
                align-items: center;
                justify-content: center;
            }

            &.value.start:not(.vertical)::after {
                justify-content: start;
            }

            &.vertical {
                writing-mode: vertical-lr;
                direction: rtl;
                background-size: 100% calc(var(--percent) * 1%);
                background-position: bottom;
            }

            &.vertical.value::after {
                writing-mode: horizontal-tb;
            }

            &.vertical.value.start::after {
                align-items: end;
            }

            &::-webkit-slider-thumb {
                opacity: 0;
            }

            &::-moz-range-thumb {
                opacity: 0;
            }
        }
    }

    &[type=submit],
    &[type=button] {
        --padding-x: 1rem;
        cursor: pointer;
    }
}

textarea {
    resize: vertical;
    field-sizing: content;
    scrollbar-width: thin;
    min-inline-size: 10rem;
    min-block-size: calc(2lh + var(--padding-y, 0px) * 2);
    max-block-size: calc(4lh + var(--padding-y, 0px) * 2);

    &::placeholder {
        color: var(--color, #000);
        opacity: .6;
    }
}

select {
    appearance: none;
    padding-inline: var(--padding-x) calc(var(--padding-x) + 1.3lh);
    background: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16'%3e%3cpath fill='none' stroke='%23818181' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='m2 5 6 6 6-6'/%3e%3c/svg%3e") no-repeat right var(--padding-x) center, var(--bg-color);
    background-size: .8lh;

    option {
        padding: var(--padding-y,0) var(--padding-x,0);
        color: var(--color);
        border-radius: var(--radius);
        font-weight: 500;
        transition: .3s;

        &:hover{
            background-color: var(--accent-color);
        }
    }

    &,&::picker(select) {
        appearance: base-select;
    }

    &::picker(select) {
        padding: .25rem;
        border-radius: calc(var(--radius) + .25rem);
        background-color: rgba(var(--bg-color-rgb), .6);
        backdrop-filter: blur(calc(.55rem + .55vw));
        transition:
            display allow-discrete .6s,
            opacity .6s,
            overlay .6s allow-discrete;
    }

    &:not(:open)::picker(select) {
        opacity: 0;
    }

    &:open::picker(select) {
        opacity: 1;

        @starting-style {
            opacity: 0;
        }
    }

    &::after {
        display: none;
    }

}

.validate-wrapper:is([valid], [invalid]):has(input, textarea, select) {
    display: grid;
    grid-template-rows: fit-content(100%) 0fr;
    margin-bottom: var(--margin-bottom, 1rem);
    transition: .3s;

    &:has(>:nth-child(2)) {
        grid-template-rows: fit-content(100%) fit-content(100%) 0fr;
    }


    &[valid]:has(:is(input, textarea, select):user-valid) {

        grid-template-rows: fit-content(100%) 1fr;

        &:has(>:nth-child(2)) {
            grid-template-rows: fit-content(100%) fit-content(100%) 1fr;
        }

        &::after {
            color: var(--valid-color);
            content: attr(valid);
            margin-top: calc(var(--margin-bottom, 1rem) / 2);
        }
    }

    &[invalid]:has(:is(input, textarea, select):user-invalid) {

        grid-template-rows: fit-content(100%) 1fr;

        &:has(>:nth-child(2)) {
            grid-template-rows: fit-content(100%) fit-content(100%) 1fr;
        }

        &::after {
            color: var(--invalid-color);
            content: attr(invalid);
            margin-top: calc(var(--margin-bottom, 1rem) / 2);
        }
    }

    &::after {
        content: '\00a0';
        overflow: hidden;
    }

    :is(input, textarea, select, label) {
        margin-bottom: calc(var(--margin-bottom, 1rem) / 2);

        &:last-child {
            margin-bottom: unset;
        }
    }

}